{"version":3,"sources":["redux/actions/taskActions.js","components/Task.jsx","components/List.jsx","redux/actions/userActions.js","components/Register.jsx","components/Header.jsx","App.js","redux/reducers/taskReducer.js","redux/reducers/userReducer.js","redux/reducers/rootReducer.js","index.js"],"names":["taskActions","getTasks","dispatch","getState","a","axios","get","response","type","payload","data","console","log","postTask","task","post","deleteTask","id","delete","taskStatus","mapDispatchToProps","connect","idx","className","done","title","date","split","reverse","join","time","description","onClick","_id","updateTask","state","allTasks","tasks","loggedUser","users","useState","sortedByDate","setStortedByDate","setTask","useEffect","length","sortByDate","sort","b","handleInput","e","target","name","value","style","marginTop","textAlign","marginBottom","placeholder","onChange","alert","userId","map","email","userActions","signIn","user","success","signUp","signOut","preserve","token","headers","Authorization","history","googleSignUp","firstName","profileObj","givenName","lastName","familyName","password","googleId","picUrl","imageUrl","res","push","googleSignIn","clientId","buttonText","onSuccess","onFailure","cookiePolicy","display","backgroundImage","backgroundSize","borderRadius","localStorage","getItem","to","path","component","List","exact","Register","initState","taskReducer","action","filter","userReducer","setItem","clear","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8dba519.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst taskActions = {\r\n    getTasks: ()=>{\r\n        return async (dispatch, getState) =>{\r\n            try {\r\n                const response = await axios.get('https://organizateunpoco.herokuapp.com/api/tasks')\r\n                dispatch({\r\n                    type: 'GET_TASKS',\r\n                    payload: response.data.response\r\n                })\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    },\r\n    postTask: (task) =>{\r\n        return async (dispatch, getState) =>{\r\n            try {\r\n                const response = await axios.post('https://organizateunpoco.herokuapp.com/api/tasks', task)\r\n                dispatch({\r\n                    type: 'POST_TASK',\r\n                    payload: response.data.response\r\n                })\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    },\r\n    deleteTask:(id) =>{\r\n        return async (dispatch, getState) =>{\r\n            try {\r\n         await axios.delete('https://organizateunpoco.herokuapp.com/api/task/'+ id)\r\n                dispatch({\r\n                    type: 'DELETE_TASK',\r\n                    payload: id\r\n                })\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    },\r\n    taskStatus:(id) =>{\r\n        \r\n        return async (dispatch, getState) =>{\r\n            try {\r\n                const response = await axios.post('https://organizateunpoco.herokuapp.com/api/task/'+ id)\r\n                dispatch({\r\n                    type:'TASK_STATUS',\r\n                    payload: response.data.response\r\n                })\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default taskActions","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport taskActions from '../redux/actions/taskActions'\r\nimport {AiOutlineFileDone} from 'react-icons/ai'\r\nimport {FaRegTrashAlt} from 'react-icons/fa'\r\n\r\nconst Task = ({task, deleteTask, idx, taskStatus}) => {\r\n\r\n    const setStatus = () =>{\r\n        taskStatus(task._id)\r\n    }\r\n\r\n      return (\r\n        <div className={task.done ? 'taskContainer opacity' : 'taskContainer'}>\r\n            <div className=\"taskInfo\">\r\n                <h2>{task.title}</h2>\r\n                <p><span className='bold'>Fecha:</span> {task.date.split('-').reverse().join('/')}</p>\r\n                <p><span className='bold'>Hora:</span> {task.time}</p>\r\n                <p>{task.description}</p>\r\n            </div>\r\n            <div className=\"controls\">\r\n                <button className='btnControl' onClick={setStatus}><AiOutlineFileDone className='icons'/></button>\r\n                <button className='btnControl' onClick={()=>deleteTask(task._id, idx)}><FaRegTrashAlt className='icons'/></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapDispatchToProps = {\r\n    taskStatus: taskActions.taskStatus\r\n}\r\nexport default connect(null, mapDispatchToProps)(Task)\r\n","import React, { useState, useEffect } from 'react'\r\nimport Task from './Task'\r\nimport {connect } from 'react-redux'\r\nimport taskActions from '../redux/actions/taskActions'\r\n\r\nconst List = ({getTasks, allTasks, postTask, deleteTask, updateTask, loggedUser}) => {\r\n    const [sortedByDate, setStortedByDate] = useState([])\r\n    const [task, setTask] = useState({\r\n        title:'',\r\n        time:'',\r\n        date:'',\r\n        description:''\r\n    })\r\n\r\n    useEffect(()=>{\r\n        getTasks()\r\n    },[getTasks])\r\n\r\n\r\n    useEffect(()=>{\r\n        if(allTasks.length!==0){\r\n           const sortByDate = allTasks.sort((a, b)=>{\r\n               return (\r\n                   a.date.split('-').join('') - b.date.split('-').join('')\r\n               )\r\n           })\r\n           setStortedByDate(sortByDate)\r\n        }\r\n    },[allTasks])\r\n\r\n    const handleInput = (e) =>{\r\n        setTask({\r\n            ...task,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const sendData = ()=>{\r\n        if(task.title==='' || task.time==='' || task.date==='' || task.description===''){\r\n            alert('No blank inputs')\r\n        }else{\r\n            postTask({task, userId: loggedUser._id})\r\n            setTask({\r\n                title:'',\r\n                time:'',\r\n                date:'',\r\n                description:''\r\n            })\r\n        }\r\n    }\r\n    return (\r\n    <>\r\n            <h1 style={{marginTop: '1vh', textAlign:'center', marginBottom: '6vh'}}>Agenda 2021</h1>\r\n        <div className='bigContainer'>\r\n                \r\n            <div className='container'>\r\n                <div className='inputs'>\r\n                    <input type='text' name='title' placeholder='Título' className='input' onChange={handleInput} value={task.title}/>\r\n                    <input type=\"time\" name=\"time\" placeholder='Hora' className='input' onChange={handleInput} value={task.time}/>\r\n                    <input type=\"date\" name=\"date\" placeholder='fecha' className='input' onChange={handleInput} value={task.date}/>\r\n                    <textarea name='description' placeholder='Descripción de la tarea' className='input' onChange={handleInput} value={task.description}/>\r\n                    <button onClick={sendData} className='sendBtn'>Enviar</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"tasksContainer\">\r\n                {allTasks.length=== 0 &&(\r\n                    <div className='noTasks'>\r\n                    <h1>Aún no tienes tareas</h1>\r\n                    <h2>Agrega una nueva</h2>\r\n                    </div>\r\n                )}\r\n                {sortedByDate.map((task, idx) =>{\r\n                    if(loggedUser.email === task.userId.email){\r\n                        return (\r\n                            <Task     \r\n                                task={task} \r\n                                key={task._id} \r\n                                deleteTask={deleteTask} \r\n                                updateTask={updateTask}\r\n                                idx={idx}/>\r\n                        )\r\n                    }} \r\n                    )}\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        allTasks: state.tasks.allTasks,\r\n        loggedUser: state.users.loggedUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps ={\r\n    getTasks: taskActions.getTasks,\r\n    postTask: taskActions.postTask,\r\n    deleteTask: taskActions.deleteTask,\r\n    updateTask: taskActions.updateTask\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List)\r\n","import axios from 'axios'\r\n\r\nconst userActions ={\r\n    signIn:(user) =>{\r\n        return async (dispatch, getState) =>{\r\n            const response = await axios.post('https://organizateunpoco.herokuapp.com/api/user/signin', user)\r\n\r\n            if(!response.data.success){\r\n                return response.data\r\n            }\r\n            dispatch({\r\n                type: 'USER_LOG',\r\n                payload: response.data.response\r\n            })\r\n        }\r\n    },\r\n    signUp:(user) =>{\r\n        return async (dispatch, getState) =>{\r\n            const response = await axios.post('https://organizateunpoco.herokuapp.com/api/user/signup', user)\r\n            if(response.data.success){\r\n                dispatch({\r\n                    type: 'USER_LOG',\r\n                    payload: response.data.response\r\n                })\r\n                return response.data\r\n            }\r\n        }\r\n    },\r\n    signOut:()=>{\r\n        return async (dispatch, getState)=>{\r\n            dispatch({\r\n                type:'SIGN_OUT'\r\n            })\r\n        }\r\n    },\r\n    preserve: (token) =>{\r\n        return async (dispatch, getState) =>{\r\n            const response = await axios.post('https://organizateunpoco.herokuapp.com/api/user/preserve', {token},{\r\n                headers:{\r\n                    Authorization: 'Bearer ' + token\r\n                }\r\n            })\r\n            dispatch({\r\n                type:'USER_LOG',\r\n                payload: response.data.response\r\n            })\r\n        }\r\n    }\r\n}\r\nexport default userActions","//860837672559-v8rvkoo3q9bs4ln02uvpr3pileo394ta.apps.googleusercontent.com\r\nimport React from 'react'\r\nimport GoogleLogin from 'react-google-login';\r\nimport { connect } from 'react-redux';\r\nimport userActions from '../redux/actions/userActions';\r\n\r\nconst Register = ({signUp, signIn, history}) => {\r\n\r\n    const googleSignUp = async (response) =>{\r\n        const res = await signUp({\r\n            firstName: response.profileObj.givenName,\r\n            lastName: response.profileObj.familyName,\r\n            email: response.profileObj.email,\r\n            password: response.profileObj.googleId,\r\n            picUrl: response.profileObj.imageUrl\r\n        })\r\n            if(res && res.success){\r\n                history.push('/agenda')\r\n            }    \r\n            }\r\n    const googleSignIn =  async (response) =>{\r\n\r\n       const res=  await signIn({\r\n            email: response.profileObj.email,\r\n            password: response.profileObj.googleId,\r\n        })\r\n        if(res && !res.success){\r\n            alert(res.response)\r\n        }else{\r\n            history.push('/agenda')\r\n        }\r\n    }\r\n    return (\r\n        <div className=' register'>\r\n            <div className=\"left\">\r\n            <div className=\"googleContainer\">\r\n                    <h3>Ya tenés cuenta? Iniciá sesión</h3>\r\n                    <GoogleLogin\r\n                        clientId=\"860837672559-v8rvkoo3q9bs4ln02uvpr3pileo394ta.apps.googleusercontent.com\"\r\n                        buttonText=\"Inicia sesión con google\"\r\n                        onSuccess={googleSignIn}\r\n                        onFailure={googleSignIn}\r\n                        cookiePolicy={'single_host_origin'}\r\n                        />\r\n                </div>\r\n                <div className=\"googleContainer\">\r\n                    <h3>No tenés cuenta? Registrate</h3>\r\n                    <GoogleLogin\r\n                        clientId=\"860837672559-v8rvkoo3q9bs4ln02uvpr3pileo394ta.apps.googleusercontent.com\"\r\n                        buttonText=\"Registrate con google\"\r\n                        onSuccess={googleSignUp}\r\n                        onFailure={googleSignUp}\r\n                        cookiePolicy={'single_host_origin'}\r\n                        />\r\n                </div>\r\n               \r\n            </div>\r\n            <div className=\"right\">\r\n                <div className=\"text\">\r\n                    <h2>Hay mucho para hacer</h2>\r\n                    <h2>Organizate</h2>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps ={\r\n    signUp: userActions.signUp,\r\n    signIn: userActions.signIn\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Register)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport userActions from '../redux/actions/userActions'\r\n\r\nconst Header = ({loggedUser, signOut}) => {\r\n    return (\r\n        <>\r\n        {loggedUser && (\r\n                <header style={{display: 'flex'}}>\r\n                    <div className='user'>\r\n                        <div className='userImg' style={{backgroundImage: `url(${loggedUser.picUrl})`, backgroundSize: 'cover', borderRadius: '100%'}}></div>\r\n                        <p>Hola {loggedUser.firstName}!</p>\r\n                    </div>\r\n                    <p onClick={()=>signOut()} className='link'>Cerrar sesión</p>\r\n        </header>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        loggedUser: state.users.loggedUser\r\n    }\r\n}\r\nconst mapDispatchToProps ={\r\n    signOut: userActions.signOut\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\r\n","import './App.css';\nimport List from './components/List';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport Register from './components/Register'\nimport { connect } from 'react-redux';\nimport Header from './components/Header';\nimport { useEffect } from 'react';\nimport userActions from './redux/actions/userActions';\n\nfunction App({loggedUser, preserve}) {\n\n  useEffect(() => {\n    if(!loggedUser && localStorage.getItem('token')){\n      preserve(localStorage.getItem('token'))\n    }\n  }, [])\n\n\n  return (\n    <Router>\n      <Header/>\n      <Switch>\n        {!loggedUser ? (\n          <>\n        <Route exact path='/' component={Register} />\n        <Redirect to='/'/>\n\n        </>\n        ) :(\n          <>\n          <Redirect to='agenda'/>\n          <Route path='/agenda' component={List}/>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n}\nconst mapStateToProps = state =>{\n  return{\n    loggedUser: state.users.loggedUser\n  }\n}\n\nconst mapDispatchToProps = {\n  preserve: userActions.preserve\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const initState ={\r\n    allTasks: []\r\n}\r\n\r\nconst taskReducer = (state = initState, action) =>{\r\n    switch(action.type){\r\n        case 'GET_TASKS':\r\n        return{\r\n            ...state,\r\n            allTasks: action.payload\r\n        }\r\n        case 'POST_TASK':\r\n            return{\r\n                ...state,\r\n                allTasks: [...state.allTasks, action.payload]\r\n            }\r\n        case 'DELETE_TASK':\r\n            return{\r\n                ...state,\r\n                allTasks: state.allTasks.filter(task => action.payload !== task._id)\r\n            }\r\n        case 'TASK_STATUS':\r\n            return{\r\n                ...state,\r\n                allTasks: state.allTasks.map(task => task._id === action.payload._id ? action.payload : task)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default taskReducer","const initState ={\r\n    loggedUser: null\r\n}\r\n\r\nconst userReducer = (state = initState, action) =>{\r\n    switch(action.type){\r\n        case 'USER_LOG':\r\n            localStorage.setItem('firstName', action.payload.firstName)\r\n            localStorage.setItem('picUrl', action.payload.picUrl)\r\n            localStorage.setItem('token', action.payload.token)\r\n            return{\r\n                ...state,\r\n                loggedUser: action.payload\r\n            }\r\n        case 'SIGN_OUT':\r\n            localStorage.clear()\r\n            return{\r\n                ...state,\r\n                loggedUser: null\r\n            }\r\n        default :\r\n        return state\r\n    }\r\n}\r\n\r\nexport default userReducer","import {combineReducers} from 'redux'\r\nimport taskReducer from './taskReducer'\r\nimport userReducer from './userReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    tasks: taskReducer,\r\n    users: userReducer\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {applyMiddleware, createStore} from 'redux'\nimport rootReducer from './redux/reducers/rootReducer'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}